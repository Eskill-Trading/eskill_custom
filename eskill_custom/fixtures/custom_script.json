[
 {
  "docstatus": 0,
  "doctype": "Custom Script",
  "dt": "Item",
  "modified": "2020-09-15 10:27:22.849833",
  "name": "Item-Client",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "script": "frappe.ui.form.on('Item', {\n\trefresh(frm) {\n\t    frm.add_custom_button(__(\"KB Articles\"), function() {\n\t        frm.save();\n            frappe.route_options = {\n                \"type\": \"Product\",\n                \"product\": cur_frm.doc.item_code\n            };\n            frappe.set_route(\"List\", \"KBA\", \"List\");\n\t    });\n\t    frm.add_custom_button(__(\"New KBA\"), function() {\n\t        frm.save();\n            frappe.route_options = {\n                \"type\": \"Product\",\n                \"product\": cur_frm.doc.item_code\n            };\n            frappe.set_route(\"Form\", \"KBA\", \"New KBA\");\n\t    });\n    }\n});"
 },
 {
  "docstatus": 0,
  "doctype": "Custom Script",
  "dt": "Issue",
  "modified": "2020-10-27 16:10:39.187874",
  "name": "Issue-Client",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "script": "frappe.ui.form.on('Issue', {\n\trefresh(frm) {\n\t\tfrm.add_custom_button(__(\"Timesheets\"), function() {\n\t\t    frm.save();\n            frappe.route_options = {\"issue\": cur_frm.doc.name};\n            frappe.set_route(\"List\", \"Timesheet\");\n\t    });\n\t\tfrm.add_custom_button(__(\"KB Articles\"), function() {\n\t\t    frm.save();\n            frappe.route_options = {\n                \"area\": \"Technical\",\n                \"type\": \"Product\",\n                \"product\": cur_frm.doc.model \n            };\n            frappe.set_route(\"List\", \"KBA\");\n\t    });\n\t    frm.add_custom_button(__(\"Parts Request\"), function() {\n        \tfrm.save();\n            if (frm.doc.part_list) {\n        \t    const request = frappe.model.get_new_doc(\"Material Request\");\n    \t        console.log(\"Request started\");\n    \t        request.naming_series = \"MAT-MR-.YYYY.-\";\n    \t        request.schedule_date = frappe.datetime.nowdate();\n    \t        request.transaction_date = frappe.datetime.nowdate();\n                request.material_request_type = \"Material Transfer\";\n                request.company = \"Eskill Trading (Pvt) Ltd\";\n                request.requested_by = frappe.session.user;\n                request.issue = frm.doc.name;\n                request.docstatus = 1;\n                request.status = \"Submitted\";\n        \t    frm.doc.part_list.forEach( function(row) {\n        \t        if (row.status == \"Not Requested\") {\n            \t        var part = frappe.model.add_child(request, \"Material Request Item\", \"items\");\n            \t        part.item_code = row.part;\n            \t        part.qty = row.qty;\n            \t        part.description = row.description;\n            \t        part.schedule_date = request.schedule_date;\n            \t        part.uom = row.uom;\n            \t        part.stock_uom = row.uom;\n            \t        part.warehouse = row.warehouse;\n            \t        part.conversion_factor = 1;\n        \t        }\n        \t    });\n        \t    console.log(\"Finished populating request.\");\n                frappe.db.insert(request).then( function(doc) {\n                    const new_request = doc.name;\n                    frm.doc.part_list.forEach( function(row) {\n                        row.status = \"Requested\";\n                        row.request = new_request;\n                    });\n            \t    frappe.set_route(\"Form\", \"Material Request\", new_request);\n                });\n                console.log(\"Request saved.\");\n            }\n\t\t});\n\t\tif (frm.doc.model) {\n    \t\tfrm.fields_dict['serial_number'].get_query = function() {\n    \t\t\treturn{\n    \t\t\t\tfilters: {\n    \t\t\t\t\t'item_code': frm.doc.model\n    \t\t\t\t}\n    \t\t\t};\n    \t\t};\n\t\t}\n\t},\n\t\n\tbefore_save: function(frm) {\n\t    if (frm.doc.serial_number && !frm.doc.model) {\n\t        frm.doc.serial_number = undefined;\n\t    }\n\t},\n\t\n\tpart_list: function(frm) {\n\t    console.log(\"After save\");\n\t    var requests = new Array(0);\n\t    var test;\n\t    frappe.call({\n\t        method: \"frappe.client.get_list\",\n\t        args: {\n\t            doctype: \"Material Request\",\n\t            filters: [\n\t                ['issue', '=', frm.doc.name],\n\t                ['docstatus', '=', 1]\n                ],\n\t            fields: ['name'],\n\t            limit_page_length: 500\n\t        },\n\t        callback: function(data) {\n\t            data.message.forEach(function(row) {\n\t                requests.unshift(row);\n\t            });\n\t        }\n\t    });\n\t    console.log(\"Got requests\");\n\t    console.log(test);\n\t    console.log('requests', requests, requests.length);\n\t    var partList = frm.doc.part_list;\n\t    var items = new Array(0);\n\t    requests.forEach(function(row) {\n\t        console.log(row, row.length);\n    \t    frappe.call({\n    \t        method: \"frappe.client.get_list\",\n    \t        args: {\n    \t            doctype: \"Material Request Item\",\n    \t            filters: [\n    \t                ['parent', '=', row.name],\n                    ],\n    \t            fields: ['item_code', 'qty', 'ordered_qty'],\n    \t            limit_page_length: 500,\n    \t            parent: 'Material Request'\n    \t        },\n    \t        callback: function(data) {\n    \t            data.message.forEach(function(item) {\n        \t            items.push(item);\n    \t            });\n    \t        }\n    \t    });\n\t    });\n\t    console.log(\"Got request items\");\n\t    console.log('items', items, items.length);\n\t},\n\t\n\tserial_number: function(frm) {\n\t    var status;\n\t    frappe.run_serially([\n    \t    () => console.log(\"serial number modified\"),\n    \t    () => frappe.call({\n                method: \"frappe.client.get_value\",\n                args: {\n                    \"doctype\": \"Serial No\",\n                    \"filters\": {\n                        'name': frm.doc.serial_number // where Clause \n                    },\n                    \"fieldname\": ['maintenance_status'], // fieldname to be fetched\n                    \"limit\": 1\n                },\n                callback: function (data) {\n                    status = data.message.maintenance_status;\n                    if (!data.exc) {\n                       console.log(data.message);\n                    }\n                }\n            }),\n            () => console.log(status),\n    \t    () => frm.set_df_property(\"serial_number\", \"description\", status ? status:\"Unknown\")\n\t    ]);\n\t},\n\t\n\tserial_no_report: function(frm) {\n\t    frm.save();\n\t    window.open(\"api/method/frappe.utils.print_format.download_pdf?doctype=Serial No&name=\" + frm.doc.serial_number + \"&format=Eskill Serial Number History\");\n\t},\n\t\n\twarranty_date_update: function(frm) {\n\t    frm.save();\n\t    var warranty_get, item_warranty, name_get, customer_name;\n        frappe.run_serially([\n            () => warranty_get = frappe.db.get_value(\"Item\", frm.doc.model, \"warranty_period\"),\n            () => item_warranty = warranty_get.responseJSON.message.warranty_period,\n            () => name_get = frappe.db.get_value(\"Customer\", frm.doc.customer, \"customer_name\"),\n            () => customer_name = name_get.responseJSON.message.customer_name,\n            () => frappe.prompt([\n                    {\n                        label: 'Date of Purchase',\n                        fieldname: 'purchase_date',\n                        fieldtype: 'Date',\n                        description: 'From dealer',\n                        reqd: true\n                    },\n                    {\n                        label: 'Warranty Period(Days)',\n                        fieldname: 'warranty_period',\n                        fieldtype: 'Int',\n                        reqd: item_warranty ? false: true\n                    },\n                ], (values, doc) => {\n                    console.log(values.purchase_date, values.warranty_period);\n                    if (values.warranty_period) {\n                        frappe.call({\n                            \"method\": \"frappe.client.set_value\",\n                            \"args\": {\n                                \"doctype\": \"Serial No\",\n                                \"name\": frm.doc.serial_number,\n                                \"fieldname\": {\n                                    \"customer\": frm.doc.customer,\n                                    \"customer_name\": customer_name,\n                                    \"warranty_expiry_date\": frappe.datetime.add_days(values.purchase_date, values.warranty_period),\n                                },\n                            }\n                        });\n                    } else if (item_warranty) {\n                        frappe.call({\n                            \"method\": \"frappe.client.set_value\",\n                            \"args\": {\n                                \"doctype\": \"Serial No\",\n                                \"name\": frm.doc.serial_number,\n                                \"fieldname\": {\n                                    \"customer\": frm.doc.customer,\n                                    \"customer_name\": customer_name,\n                                    \"warranty_expiry_date\": frappe.datetime.add_days(values.purchase_date, item_warranty),\n                                },\n                            }\n                        });\n                    } else {\n                        frappe.throw(\"No warranty period has been defined for the item.\");\n                    }\n            }),\n        ]);\n    },\n\t\n\temail_account: function(frm) {\n\t    if (frm.doc.email_account == 'Zabbix Internal Issues') {\n\t        frm.set_value(\"issue_type\", \"Internal Software Support\");\n\t        frm.set_value(\"priority\", \"High\");\n\t        frm.save();\n\t    }\n\t},\n\t\n\tkba_creation: function(frm) {\n\t    frm.save();\n\t    frappe.db.insert({\n\t        doctype: 'KBA',\n\t        topic: frm.doc.subject,\n\t        area: 'Technical',\n\t        type: 'Product',\n\t        product: frm.doc.model,\n\t        details: frm.doc.resolution_details,\n\t        parent_kba: 'KBA-20-Other-00000036'\n\t    });\n\t    frappe.msgprint(\"KBA created.\");\n\t},\n\t\n    model: function(frm) {\n\t\tfrm.fields_dict['serial_number'].get_query = function() {\n\t\t\treturn{\n\t\t\t\tfilters: {\n\t\t\t\t\t'item_code': frm.doc.model\n\t\t\t\t}\n\t\t\t};\n\t\t};\n    },\n});\n\nfrappe.ui.form.on('Part List', {\n    refresh(frm) {\n        if (frm.doc.status != \"Not Requested\") {\n            frm.set_df_property(\"warehouse\", \"read_only\", 1);\n        }\n    },\n    \n\treceived_button: function(frm, cdt, cdn) {\n\t    const row = frappe.get_doc(cdt,cdn);\n        frm.get_field(\"part_list\").grid.grid_rows[row.idx - 1].doc.status = \"Received\";\n        frm.get_field(\"part_list\").grid.grid_rows[row.idx - 1].refresh_field(\"status\");\n\t    console.log(\"Part received\");\n\t},\n});"
 },
 {
  "docstatus": 0,
  "doctype": "Custom Script",
  "dt": "Sales Order",
  "modified": "2020-10-22 13:54:49.178712",
  "name": "Sales Order-Client",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "script": "frappe.ui.form.on('Sales Order', {\n\tbefore_submit(frm) {\n    \tvar tempCust = frm.doc.customer;\n\t\tfrm.set_value(\"customer\", \"\");\n\t\tfrm.set_value(\"customer\", tempCust);\n\n        var emp = '';\n        frappe.run_serially([\n            () => frappe.call({\n                method: \"frappe.client.get_value\",\n                args: {\n                    \"doctype\": \"Employee\",\n                    \"filters\": {\n                        'user_id': frappe.session.user // where Clause \n                    },\n                    \"fieldname\": ['name'], // fieldname to be fetched\n                    \"limit\": 1\n                },\n                callback: function (data) {\n                    emp = data.message.name;\n                    if (!data.exc) {\n                       console.log(data.message);\n                    }\n                }\n            }),\n            () => frappe.call({\n                method: \"frappe.client.get_value\",\n                args: {\n                    \"doctype\": \"Sales Person\",\n                    \"filters\": {\n                        'employee': emp // where Clause \n                    },\n                    \"fieldname\": ['name'], // fieldname to be fetched\n                    \"limit\": 1\n                },\n                callback: function (data) {\n                    frm.set_value('sales_person', data.message.name);\n                    frm.refresh_field('sales_person');\n                    if (!data.exc) {\n                       console.log(r.message);\n                    }\n                }\n            }),\n            () => frm.clear_table('sales_team'),\n            () => frm.add_child('sales_team', {'sales_person': frm.doc.sales_person, 'allocated_percentage': 100}),\n            () => frm.refresh_field('sales_team')\n        ]);\n\t}\n});"
 },
 {
  "docstatus": 0,
  "doctype": "Custom Script",
  "dt": "Sales Invoice",
  "modified": "2020-10-22 13:38:43.924120",
  "name": "Sales Invoice-Client",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "script": "frappe.ui.form.on('Sales Invoice', {\n\tbefore_submit(frm) {\n\t    var emp, sales_team;\n\t    frappe.run_serially([\n            () => frappe.call({\n                method: \"frappe.client.get_value\",\n                args: {\n                    \"doctype\": \"Employee\",\n                    \"filters\": {\n                        'user_id': frappe.session.user // where Clause \n                    },\n                    \"fieldname\": ['name'], // fieldname to be fetched\n                    \"limit\": 1\n                },\n                callback: function (data) {\n                    emp = data.message.name;\n                    if (!data.exc) {\n                       console.log(r.message);\n                    }\n                }\n            }),\n            () => frappe.call({\n                method: \"frappe.client.get_value\",\n                args: {\n                    \"doctype\": \"Sales Person\",\n                    \"filters\": {\n                        'employee': emp // where Clause \n                    },\n                    \"fieldname\": ['name'], // fieldname to be fetched\n                    \"limit\": 1\n                },\n                callback: function (data) {\n                    frm.set_value('sales_person', data.message.name);\n                    frm.refresh_field('sales_person');\n                    if (!data.exc) {\n                       console.log(r.message);\n                    }\n                }\n            }),\n            () => frm.clear_table('sales_team'),\n            () => frm.add_child('sales_team', {'sales_person': frm.doc.sales_person, 'allocated_percentage': 100}),\n            () => frm.refresh_field('sales_team')\n        ]);\n\t}\n});"
 },
 {
  "docstatus": 0,
  "doctype": "Custom Script",
  "dt": "Task",
  "modified": "2020-09-21 09:43:27.722266",
  "name": "Task-Client",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "script": "frappe.ui.form.on('Task', {\n\trefresh(frm) {\n\t    if (frm.doc.status == 'Completed') {\n            frm.add_custom_button(\"Reopen\", function() {\n                frm.set_value(\"status\", \"Open\");\n                frm.set_value(\"progress\", 50);\n                frm.save();\n            });\n\t    } else if (frm.doc.status == 'Cancelled'){\n            frm.add_custom_button(\"Reopen\", function() {\n                frm.set_value(\"status\", \"Open\");\n                frm.save();\n            });\n\t    } else if (frm.doc.status == \"Open\") {\n            frm.add_custom_button(\"Working\", function() {\n                frm.set_value(\"status\", \"Working\");\n                frm.save();\n            }, \"Set Status\");\n            frm.add_custom_button(\"Pending Review\", function() {\n                frm.set_value(\"status\", \"Pending Review\");\n                frm.save();\n            }, \"Set Status\");\n            frm.add_custom_button(\"Cancel\", function() {\n                frm.set_value(\"status\", \"Cancelled\");\n                frm.save();\n            }, \"Set Status\");\n            frm.add_custom_button(\"Complete\", function() {\n                frm.set_value(\"status\", \"Completed\");\n                frm.save();\n            }, \"Set Status\");\n\t    } else if (frm.doc.status == \"Working\") {\n            frm.add_custom_button(\"Open\", function() {\n                frm.set_value(\"status\", \"Open\");\n                frm.save();\n            }, \"Set Status\");\n            frm.add_custom_button(\"Pending Review\", function() {\n                frm.set_value(\"status\", \"Pending Review\");\n                frm.save();\n            }, \"Set Status\");\n            frm.add_custom_button(\"Cancel\", function() {\n                frm.set_value(\"status\", \"Cancelled\");\n                frm.save();\n            }, \"Set Status\");\n            frm.add_custom_button(\"Complete\", function() {\n                frm.set_value(\"status\", \"Completed\");\n                frm.save();\n            }, \"Set Status\");\n\t    } else if (frm.doc.status == \"Pending Review\") {\n            frm.add_custom_button(\"Open\", function() {\n                frm.set_value(\"status\", \"Open\");\n                frm.save();\n            }, \"Set Status\");\n            frm.add_custom_button(\"Working\", function() {\n                frm.set_value(\"status\", \"Working\");\n                frm.save();\n            }, \"Set Status\");\n            frm.add_custom_button(\"Cancel\", function() {\n                frm.set_value(\"status\", \"Cancelled\");\n                frm.save();\n            }, \"Set Status\");\n            frm.add_custom_button(\"Complete\", function() {\n                frm.set_value(\"status\", \"Completed\");\n                frm.save();\n            }, \"Set Status\");\n\t    } else if (frm.doc.status == \"Overdue\") {\n            frm.add_custom_button(\"Cancel\", function() {\n                frm.set_value(\"status\", \"Cancelled\");\n                frm.save();\n            }, \"Set Status\");\n            frm.add_custom_button(\"Complete\", function() {\n                frm.set_value(\"status\", \"Completed\");\n                frm.save();\n            }, \"Set Status\");\n\t    }\n\t},\n\t\n\tstatus: function(frm) {\n\t    if (frm.doc.status != \"Completed\") {\n\t        frm.set_value(\"completed_by\", \"\");\n\t    } else {\n\t        frm.set_value(\"completed_by\", frappe.session.user);\n\t    }\n\t    if (frm.doc.status == \"Working\" && frm.doc.progress === 0) {\n\t        frm.set_value(\"progress\", 5);\n\t    }\n\t}\n});"
 },
 {
  "docstatus": 0,
  "doctype": "Custom Script",
  "dt": "Timesheet",
  "modified": "2020-09-14 15:10:38.035307",
  "name": "Timesheet-Client",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "script": "frappe.ui.form.on('Timesheet', {\n\trefresh(frm) {\n\t\tfrm.add_custom_button(__(\"Issues\"), function() {\n\t\t    frm.save();\n            frappe.route_options = {\n                \"name\": '',\n                \"subject\": '',\n                \"customer\": '',\n                \"serial_number\": '',\n                \"project\": '',\n                \"status\": '',\n                \"priority\": '',\n                \"technician_name\": ''\n            };\n            frappe.set_route(\"List\", \"Issue\");\n\t    });\n\t\tfrm.add_custom_button(__(\"Tasks\"), function() {\n\t\t    frm.save();\n            frappe.route_options = {\n                \"name\": '',\n                \"subject\": '',\n                \"project\": '',\n                \"status\": '',\n                \"priority\": ''\n            };\n            frappe.set_route(\"List\", \"Task\");\n\t    });\n\t}\n});"
 },
 {
  "docstatus": 0,
  "doctype": "Custom Script",
  "dt": "Quotation",
  "modified": "2020-10-22 12:23:26.887787",
  "name": "Quotation-Client",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "script": "frappe.ui.form.on('Quotation', {\n\tbefore_submit(frm) {\n\t    var emp;\n\t    frappe.run_serially([\n            () => frappe.call({\n                method: \"frappe.client.get_value\",\n                args: {\n                    \"doctype\": \"Employee\",\n                    \"filters\": {\n                        'user_id': frappe.session.user // where Clause \n                    },\n                    \"fieldname\": ['name'], // fieldname to be fetched\n                    \"limit\": 1\n                },\n                callback: function (data) {\n                    emp = data.message.name;\n                    if (!data.exc) {\n                       console.log(r.message);\n                    }\n                }\n            }),\n            () => frappe.call({\n                method: \"frappe.client.get_value\",\n                args: {\n                    \"doctype\": \"Sales Person\",\n                    \"filters\": {\n                        'employee': emp // where Clause \n                    },\n                    \"fieldname\": ['name'], // fieldname to be fetched\n                    \"limit\": 1\n                },\n                callback: function (data) {\n                    frm.set_value('sales_person', data.message.name);\n                    frm.refresh_field('sales_person');\n                    if (!data.exc) {\n                       console.log(r.message);\n                    }\n                }\n            }),\n        ]);\n\t}\n})"
 }
]