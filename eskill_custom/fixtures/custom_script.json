[
 {
  "docstatus": 0,
  "doctype": "Custom Script",
  "dt": "Item",
  "modified": "2020-09-15 10:27:22.849833",
  "name": "Item-Client",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "script": "frappe.ui.form.on('Item', {\n\trefresh(frm) {\n\t    frm.add_custom_button(__(\"KB Articles\"), function() {\n\t        frm.save();\n            frappe.route_options = {\n                \"type\": \"Product\",\n                \"product\": cur_frm.doc.item_code\n            };\n            frappe.set_route(\"List\", \"KBA\", \"List\");\n\t    });\n\t    frm.add_custom_button(__(\"New KBA\"), function() {\n\t        frm.save();\n            frappe.route_options = {\n                \"type\": \"Product\",\n                \"product\": cur_frm.doc.item_code\n            };\n            frappe.set_route(\"Form\", \"KBA\", \"New KBA\");\n\t    });\n    }\n});"
 },
 {
  "docstatus": 0,
  "doctype": "Custom Script",
  "dt": "Issue",
  "modified": "2021-01-12 08:57:18.171565",
  "name": "Issue-Client",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "script": "frappe.ui.form.on('Issue', {\n\trefresh(frm) {\n\t\tfrm.add_custom_button(__(\"Test\"), function () {\n\t\t\tfrappe.model.with_doc(\"Quotation\", frm.doc.quotation, function (quote) {\n\t\t\t\tconsole.log(quote);\n\t\t\t});\n\t\t});\n\t\tfrm.add_custom_button(__(\"KB Articles\"), function () {\n\t\t\tcheck_save(frm);\n\t\t\tfrappe.route_options = {\n\t\t\t\t\"area\": \"Technical\",\n\t\t\t\t\"type\": \"Product\",\n\t\t\t\t\"product\": cur_frm.doc.model\n\t\t\t};\n\t\t\tfrappe.set_route(\"List\", \"KBA\");\n\t\t});\n\t\tfrm.add_custom_button(__(\"Timesheets\"), function () {\n\t\t\tcheck_save(frm);\n\t\t\tfrappe.route_options = { \"issue\": cur_frm.doc.name };\n\t\t\tfrappe.set_route(\"List\", \"Timesheet\");\n\t\t});\n\t\tfrm.add_custom_button(__(\"Parts Request\"), function () {\n\t\t\tcheck_save(frm);\n\t\t\tvar parts_requested = 0;\n\t\t\tif (frm.doc.part_list) {\n\t\t\t\tconst request = frappe.model.get_new_doc(\"Material Request\");\n\t\t\t\tconsole.log(\"Request started\");\n\t\t\t\trequest.naming_series = \"MAT-MR-.YYYY.-\";\n\t\t\t\trequest.schedule_date = frappe.datetime.nowdate();\n\t\t\t\trequest.transaction_date = frappe.datetime.nowdate();\n\t\t\t\trequest.material_request_type = \"Material Transfer\";\n\t\t\t\trequest.company = \"Eskill Trading (Pvt) Ltd\";\n\t\t\t\trequest.requested_by = frappe.session.user;\n\t\t\t\trequest.issue = frm.doc.name;\n\t\t\t\trequest.docstatus = 1;\n\t\t\t\trequest.status = \"Submitted\";\n\t\t\t\tfrm.doc.part_list.forEach(function (row) {\n\t\t\t\t\tif (row.status == \"Not Requested\") {\n\t\t\t\t\t\tparts_requested++;\n\t\t\t\t\t\tvar part = frappe.model.add_child(request, \"Material Request Item\", \"items\");\n\t\t\t\t\t\tpart.item_code = row.part;\n\t\t\t\t\t\tpart.qty = row.qty;\n\t\t\t\t\t\tpart.description = row.description;\n\t\t\t\t\t\tpart.schedule_date = request.schedule_date;\n\t\t\t\t\t\tpart.uom = row.uom;\n\t\t\t\t\t\tpart.stock_uom = row.uom;\n\t\t\t\t\t\tpart.warehouse = row.warehouse;\n\t\t\t\t\t\tpart.conversion_factor = 1;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tif (parts_requested) {\n\t\t\t\t\tconsole.log(\"Finished populating request.\");\n\t\t\t\t\tfrappe.db.insert(request).then(function (doc) {\n\t\t\t\t\t\tconst new_request = doc.name;\n\t\t\t\t\t\tfrm.doc.part_list.forEach(function (row) {\n\t\t\t\t\t\t\tif (row.status == \"Not Requested\") {\n\t\t\t\t\t\t\t\trow.status = \"Requested\";\n\t\t\t\t\t\t\t\trow.request = new_request;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t\tcheck_save(frm);\n\t\t\t\t\t});\n\t\t\t\t\tconsole.log(\"Request saved.\");\n\t\t\t\t} else {\n\t\t\t\t\tfrappe.msgprint(\"No parts to request.\");\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tfrappe.msgprint(\"Populate parts list to request items.\");\n\t\t\t}\n\t\t});\n\t\tif (!frm.doc.warranty_job) {\n\t\t\tif (!frm.doc.invoice && !frm.doc.delivery_note) {\n\t\t\t\tfrm.add_custom_button(__(\"Quotation\"), function () {\n\t\t\t\t\tconsole.log(\"Quote\");\n\t\t\t\t\tcheck_save(frm);\n\t\t\t\t\tif ((frm.doc.expected_hours > 0) || (frm.doc.billable_time > 0)) {\n\t\t\t\t\t\tvar quote = frappe.model.get_new_doc(\"Quotation\");\n\t\t\t\t\t\tquote.naming_series = \"SQ.########\";\n\t\t\t\t\t\tquote.quotation_to = \"Customer\";\n\t\t\t\t\t\tquote.party_name = frm.doc.customer;\n\t\t\t\t\t\tquote.order_type = \"Support\";\n\t\t\t\t\t\tquote.issue = frm.doc.name;\n\t\t\t\t\t\tquote.transaction_date = frappe.datetime.nowdate();\n\t\t\t\t\t\tquote.valid_till = frappe.datetime.add_days(frappe.datetime.nowdate(), 1);\n\t\t\t\t\t\tvar time = frappe.model.add_child(quote, \"Quotation Item\", \"items\");\n\t\t\t\t\t\tvar time_value = 1;\n\t\t\t\t\t\tif (frm.doc.billable_time === 0) {\n\t\t\t\t\t\t\ttime_value = Math.ceil(frm.doc.expected_hours);\n\t\t\t\t\t\t\ttime.qty = time_value;\n\t\t\t\t\t\t\ttime.stock_qty = time_value;\n\t\t\t\t\t\t\ttime.conversion_factor = 1;\n\t\t\t\t\t\t\tfrappe.model.with_doc(\"Item\", frm.doc.labour_code, function () {\n\t\t\t\t\t\t\t\tconst labour = frappe.model.get_doc(\"Item\", frm.doc.labour_code);\n\t\t\t\t\t\t\t\ttime.item_code = labour.name;\n\t\t\t\t\t\t\t\ttime.item_name = labour.item_name;\n\t\t\t\t\t\t\t\ttime.description = labour.description;\n\t\t\t\t\t\t\t\ttime.uom = labour.stock_uom;\n\t\t\t\t\t\t\t\ttime.stock_uom = labour.stock_uom;\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\ttime_value = Math.ceil(frm.doc.billable_time);\n\t\t\t\t\t\t\ttime.qty = time_value;\n\t\t\t\t\t\t\ttime.stock_qty = time_value;\n\t\t\t\t\t\t\ttime.conversion_factor = 1;\n\t\t\t\t\t\t\tfrappe.model.with_doc(\"Item\", frm.doc.labour_code, function () {\n\t\t\t\t\t\t\t\tconst labour = frappe.model.get_doc(\"Item\", frm.doc.labour_code);\n\t\t\t\t\t\t\t\ttime.item_code = labour.name;\n\t\t\t\t\t\t\t\ttime.item_name = labour.item_name;\n\t\t\t\t\t\t\t\ttime.description = labour.description;\n\t\t\t\t\t\t\t\ttime.uom = labour.stock_uom;\n\t\t\t\t\t\t\t\ttime.stock_uom = labour.stock_uom;\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t\ttime_value = undefined;\n\t\t\t\t\t\tif (frm.doc.part_list) {\n\t\t\t\t\t\t\tfrm.doc.part_list.forEach(function (row) {\n\t\t\t\t\t\t\t\tvar part = frappe.model.add_child(quote, \"Quotation Item\", \"items\");\n\t\t\t\t\t\t\t\tpart.item_code = row.part;\n\t\t\t\t\t\t\t\tpart.qty = row.qty;\n\t\t\t\t\t\t\t\tpart.description = row.description;\n\t\t\t\t\t\t\t\tpart.uom = row.uom;\n\t\t\t\t\t\t\t\tpart.stock_uom = row.uom;\n\t\t\t\t\t\t\t\tpart.conversion_factor = 1;\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t\tfrappe.db.insert(quote).then(function (doc) {\n\t\t\t\t\t\t\tfrappe.run_serially([\n\t\t\t\t\t\t\t\t() => frm.set_value(\"quotation\", doc.name),\n\t\t\t\t\t\t\t\t() => check_save(frm),\n\t\t\t\t\t\t\t\t() => frappe.set_route(\"Form\", \"Quotation\", doc.name),\n\t\t\t\t\t\t\t]);\n\t\t\t\t\t\t});\n\t\t\t\t\t} else {\n\t\t\t\t\t\tfrappe.throw(\"Must have expected job completion time or billable time in order to quote.\");\n\t\t\t\t\t}\n\t\t\t\t}, \"Billing\");\n\t\t\t}\n\t\t\tif (frm.doc.status == \"Closed\") {\n\t\t\t\tif (frm.doc.quotation) {\n\t\t\t\t\tif (!frm.doc.delivery_note) {\n\t\t\t\t\t\tfrm.add_custom_button(__(\"Delivery Note\"), function () {\n\t\t\t\t\t\t\tcheck_save(frm);\n\t\t\t\t\t\t\tvar delivery = frappe.model.get_new_doc(\"Delivery Note\");\n\t\t\t\t\t\t\tconsole.log(\"Delivery Note started.\");\n\t\t\t\t\t\t\tdelivery.naming_series = \"DN.########\";\n\t\t\t\t\t\t\tdelivery.posting_date = frappe.datetime.nowdate();\n\t\t\t\t\t\t\tdelivery.company = \"Eskill Trading (Pvt) Ltd\";\n\t\t\t\t\t\t\tdelivery.customer = frm.doc.customer;\n\t\t\t\t\t\t\tdelivery.issue = frm.doc.name;\n\t\t\t\t\t\t\tquote_to_delivery(frm, delivery);\n\t\t\t\t\t\t}, \"Billing\");\n\t\t\t\t\t}\n\t\t\t\t\tif (!frm.doc.invoice) {\n\t\t\t\t\t\tfrm.add_custom_button(__(\"Invoice\"), function () {\n\t\t\t\t\t\t\tconsole.log(\"Invoice\");\n\t\t\t\t\t\t\tcheck_save(frm);\n\t\t\t\t\t\t\tvar invoice = frappe.model.get_new_doc(\"Sales Invoice\");\n\t\t\t\t\t\t\tfrappe.run_serially([\n\t\t\t\t\t\t\t\t() => invoice.customer = frm.doc.customer,\n\t\t\t\t\t\t\t\t() => invoice.issue = frm.doc.name,\n\t\t\t\t\t\t\t\t() => invoice.posting_date = frappe.datetime.nowdate(),\n\t\t\t\t\t\t\t\t() => invoice.posting_time = frappe.datetime.now_time(),\n\t\t\t\t\t\t\t\t() => invoice.due_date = invoice.posting_date,\n\t\t\t\t\t\t\t\t() => note_to_invoice(frm, invoice),\n\t\t\t\t\t\t\t\t() => console.log(invoice),\n\t\t\t\t\t\t\t\t() => frappe.db.insert(invoice).then(function (doc) {\n\t\t\t\t\t\t\t\t\tfrappe.run_serially([\n\t\t\t\t\t\t\t\t\t\t() => console.log(\"Invoice created.\"),\n\t\t\t\t\t\t\t\t\t\t() => frm.set_value(\"invoice\", doc.name),\n\t\t\t\t\t\t\t\t\t\t() => check_save(frm),\n\t\t\t\t\t\t\t\t\t\t() => console.log(doc)\n\t\t\t\t\t\t\t\t\t]);\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t]);\n\t\t\t\t\t\t}, \"Billing\");\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (frm.doc.model) {\n\t\t\tserial_filter(frm);\n\t\t}\n\t\tif (frm.doc.serial_number) {\n\t\t\tserial_status(frm);\n\t\t}\n\t\tfrm.get_field(\"part_list\").grid.fields_map.warehouse.get_query = function () {\n\t\t\treturn {\n\t\t\t\tfilters: {\n\t\t\t\t\t'disabled': 0,\n\t\t\t\t\t'warehouse_type': 'Technician'\n\t\t\t\t}\n\t\t\t};\n\t\t};\n\t\tfrm.get_field(\"part_list\").grid.grid_rows.forEach(function (row) {\n\t\t\tif (row.doc.status == \"Requested\") {\n\t\t\t\tconsole.log(row.doc);\n\t\t\t\tvar request = row.doc.request;\n\t\t\t\tfrappe.model.with_doc(\"Material Request\", request, function () {\n\t\t\t\t\trequest = frappe.model.get_doc(\"Material Request\", request);\n\t\t\t\t\tvar item = request.items[row.doc.row];\n\t\t\t\t\tif (item.ordered_qty == item.stock_qty) {\n\t\t\t\t\t\trow.doc.status = \"Released\";\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t\tif (frm.doc.total_hours != 0) {\n\t\t\tfrm.set_df_property(\"expected_hours\", \"read_only\", 1);\n\t\t}\n\t\tif (frm.doc.quotation || frm.doc.order || frm.doc.invoice) {\n\t\t\tfrm.set_df_property(\"customer\", \"read_only\", 1);\n\t\t}\n\t\tfrm.refresh_field(\"part_list\");\n\t\tlabour_filter(frm);\n\t\tdevice_read_only(frm);\n\t},\n\n\tbefore_save: function (frm) {\n\t\tif (frm.doc.serial_number && !frm.doc.model) {\n\t\t\tfrm.doc.serial_number = undefined;\n\t\t}\n\t\ttime_worked(frm);\n\t},\n\n\tserial_number: function (frm) {\n\t\tserial_status(frm);\n\t},\n\n\tserial_no_report: function (frm) {\n\t\tcheck_save(frm);\n\t\twindow.open(\"api/method/frappe.utils.print_format.download_pdf?doctype=Serial No&name=\" + frm.doc.serial_number + \"&format=Eskill Serial Number History\");\n\t},\n\n\twarranty_date_update: function (frm) {\n\t\tcheck_save(frm);\n\t\tvar warranty_get, item_warranty, name_get, customer_name;\n\t\tfrappe.run_serially([\n\t\t\t() => warranty_get = frappe.db.get_value(\"Item\", frm.doc.model, \"warranty_period\"),\n\t\t\t() => item_warranty = warranty_get.responseJSON.message.warranty_period,\n\t\t\t() => name_get = frappe.db.get_value(\"Customer\", frm.doc.customer, \"customer_name\"),\n\t\t\t() => customer_name = name_get.responseJSON.message.customer_name,\n\t\t\t() => frappe.prompt([\n\t\t\t\t{\n\t\t\t\t\tlabel: 'Date of Purchase',\n\t\t\t\t\tfieldname: 'purchase_date',\n\t\t\t\t\tfieldtype: 'Date',\n\t\t\t\t\tdescription: 'From dealer',\n\t\t\t\t\treqd: true\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tlabel: 'Warranty Period(Days)',\n\t\t\t\t\tfieldname: 'warranty_period',\n\t\t\t\t\tfieldtype: 'Int',\n\t\t\t\t\treqd: item_warranty ? false : true\n\t\t\t\t},\n\t\t\t], (values) => {\n\t\t\t\tconsole.log(values.purchase_date, values.warranty_period);\n\t\t\t\tif (values.warranty_period) {\n\t\t\t\t\tfrappe.call({\n\t\t\t\t\t\t\"method\": \"frappe.client.set_value\",\n\t\t\t\t\t\t\"args\": {\n\t\t\t\t\t\t\t\"doctype\": \"Serial No\",\n\t\t\t\t\t\t\t\"name\": frm.doc.serial_number,\n\t\t\t\t\t\t\t\"fieldname\": {\n\t\t\t\t\t\t\t\t\"customer\": frm.doc.customer,\n\t\t\t\t\t\t\t\t\"customer_name\": customer_name,\n\t\t\t\t\t\t\t\t\"warranty_expiry_date\": frappe.datetime.add_days(values.purchase_date, values.warranty_period),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t} else if (item_warranty) {\n\t\t\t\t\tfrappe.call({\n\t\t\t\t\t\t\"method\": \"frappe.client.set_value\",\n\t\t\t\t\t\t\"args\": {\n\t\t\t\t\t\t\t\"doctype\": \"Serial No\",\n\t\t\t\t\t\t\t\"name\": frm.doc.serial_number,\n\t\t\t\t\t\t\t\"fieldname\": {\n\t\t\t\t\t\t\t\t\"customer\": frm.doc.customer,\n\t\t\t\t\t\t\t\t\"customer_name\": customer_name,\n\t\t\t\t\t\t\t\t\"warranty_expiry_date\": frappe.datetime.add_days(values.purchase_date, item_warranty),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tfrappe.throw(\"No warranty period has been defined for the item.\");\n\t\t\t\t}\n\t\t\t}),\n\t\t]);\n\t},\n\n\trequest_swap_out: function (frm) {\n\t\tcheck_save(frm).then(function () {\n\t\t\tvar swap_out = frappe.model.get_new_doc(\"Warranty Swap Out\");\n\t\t\tswap_out.issue = frm.doc.name;\n\t\t\tswap_out.model_in = frm.doc.model;\n\t\t\tswap_out.serial_no_in = frm.doc.serial_number;\n\t\t\tfrappe.db.insert(swap_out).then(function (doc) {\n\t\t\t\tfrm.doc.swap_out = doc.name;\n\t\t\t\tcheck_save(frm);\n\t\t\t\tfrappe.set_route(\"Form\", \"Warranty Swap Out\", doc.name);\n\t\t\t});\n\t\t});\n\t},\n\n\temail_account: function (frm) {\n\t\tif (frm.doc.email_account == 'Zabbix Internal Issues') {\n\t\t\tfrm.set_value(\"issue_type\", \"Internal Software Support\");\n\t\t\tfrm.set_value(\"priority\", \"High\");\n\t\t\tcheck_save(frm);\n\t\t}\n\t},\n\n\tkba_creation: function (frm) {\n\t\tcheck_save(frm);\n\t\tfrappe.db.insert({\n\t\t\tdoctype: 'KBA',\n\t\t\ttopic: frm.doc.subject,\n\t\t\tarea: 'Technical',\n\t\t\ttype: 'Product',\n\t\t\tproduct: frm.doc.model,\n\t\t\tdetails: frm.doc.resolution_details,\n\t\t\tparent_kba: 'KBA-20-Other-00000036'\n\t\t});\n\t\tfrappe.msgprint(\"KBA created.\");\n\t},\n\n\tmodel: function (frm) {\n\t\tserial_filter(frm);\n\t},\n});\n\nfrappe.ui.form.on('Part List', {\n\treceived_button: function (frm, cdt, cdn) {\n\t\tconst row = frappe.get_doc(cdt, cdn);\n\t\tfrm.get_field(\"part_list\").grid.grid_rows[row.idx - 1].doc.status = \"Received\";\n\t\tfrm.get_field(\"part_list\").grid.grid_rows[row.idx - 1].refresh_field(\"status\");\n\t\tconsole.log(\"Part received\");\n\t\tcheck_save(frm);\n\t},\n});\n\nfunction quote_to_delivery(frm, delivery) {\n\tfrappe.model.with_doc(\"Quotation\", frm.doc.quotation, function () {\n\t\tconst quote = frappe.model.get_doc(\"Quotation\", frm.doc.quotation);\n\t\tvar items = 0;\n\t\tvar note_item = undefined;\n\t\tquote.items.forEach(function (quote_item) {\n\t\t\tnote_item = frappe.model.add_child(delivery, \"Delivery Note Item\", \"items\");\n\t\t\tnote_item.item_code = quote_item.item_code;\n\t\t\tnote_item.item_name = quote_item.item_name;\n\t\t\tnote_item.description = quote_item.description;\n\t\t\tnote_item.qty = quote_item.qty;\n\t\t\tnote_item.stock_qty = quote_item.qty;\n\t\t\tnote_item.schedule_date = delivery.schedule_date;\n\t\t\tnote_item.uom = quote_item.uom;\n\t\t\tnote_item.stock_uom = quote_item.uom;\n\t\t\tnote_item.conversion_factor = 1;\n\t\t\tnote_item.rate = quote_item.rate;\n\t\t\titems++;\n\t\t});\n\t\tif (items > 0) {\n\t\t\tfrappe.db.insert(delivery).then(function (doc) {\n\t\t\t\tfrappe.run_serially([\n\t\t\t\t\t() => console.log(\"Delivery Note created.\"),\n\t\t\t\t\t() => frm.set_value(\"delivery_note\", doc.name),\n\t\t\t\t\t() => check_save(frm),\n\t\t\t\t\t() => frappe.set_route(\"Form\", \"Delivery Note\", doc.name)\n\t\t\t\t]);\n\t\t\t});\n\t\t} else {\n\t\t\tfrappe.throw(\"Can only make delivery on quoted items.\");\n\t\t}\n\t});\n}\n\nfunction check_save(frm) {\n\tif (frm.doc.__unsaved) {\n\t\tfrm.save();\n\t}\n}\n\nfunction labour_filter(frm) {\n\tfrm.fields_dict.labour_code.get_query = function () {\n\t\treturn {\n\t\t\tfilters: [\n\t\t\t\t[\"Item\", \"item_group\", \"=\", \"Labour\"],\n\t\t\t\t[\"Item\", \"disabled\", \"=\", false],\n\t\t\t],\n\t\t}\n\t}\n}\n\nfunction serial_filter(frm) {\n\tfrm.fields_dict.serial_number.get_query = function () {\n\t\treturn {\n\t\t\tfilters: {\n\t\t\t\t'item_code': frm.doc.model\n\t\t\t}\n\t\t};\n\t};\n}\n\nfunction serial_status(frm) {\n\tvar status;\n\tfrappe.run_serially([\n\t\t() => frappe.call({\n\t\t\tmethod: \"frappe.client.get_value\",\n\t\t\targs: {\n\t\t\t\t\"doctype\": \"Serial No\",\n\t\t\t\t\"filters\": {\n\t\t\t\t\t'name': frm.doc.serial_number // where Clause \n\t\t\t\t},\n\t\t\t\t\"fieldname\": ['maintenance_status'], // fieldname to be fetched\n\t\t\t\t\"limit\": 1\n\t\t\t},\n\t\t\tcallback: function (data) {\n\t\t\t\tstatus = data.message.maintenance_status;\n\t\t\t}\n\t\t}),\n\t\t() => console.log(status),\n\t\t() => frm.set_df_property(\"serial_number\", \"description\", status ? status : \"Unknown\")\n\t]);\n}\n\nfunction device_read_only(frm) {\n\tif (frm.doc.swap_out) {\n\t\tfrm.set_df_property(\"model\", \"read_only\", 1);\n\t\tfrm.set_df_property(\"serial_number\", \"read_only\", 1);\n\t\tfrm.set_df_property(\"warranty_job\", \"read_only\", 1);\n\t}\n}\n\nfunction time_worked(frm) {\n\tfrappe.call({\n\t\tmethod: \"eskill_custom.api.issue_total_hours\",\n\t\targs: {\n\t\t\tdoctype: \"Issue\",\n\t\t\tfilters: frm.doc.name,\n\t\t},\n\t\tcallback: function (data) {\n\t\t\tif (data.message) {\n\t\t\t\tif (data.message[0].total != frm.doc.total_time) {\n\t\t\t\t\tconsole.log(data.message[0].total);\n\t\t\t\t\tfrm.doc.total_time = data.message[0].total;\n\t\t\t\t}\n\t\t\t\tif (data.message[0].billable != frm.doc.billable_time) {\n\t\t\t\t\tconsole.log(data.message[0].billable);\n\t\t\t\t\tfrm.doc.billable_time = data.message[0].billable;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tfrm.doc.total_time = 0;\n\t\t\t\tfrm.doc.billable_time = 0;\n\t\t\t}\n\t\t}\n\t});\n}\n\nfunction quote_to_invoice(frm, invoice) {\n\tfrappe.model.with_doc(\"Quotation\", frm.doc.quotation, function () {\n\t\tconst quote = frappe.model.get_doc(\"Quotation\", frm.doc.quotation);\n\t\tvar maintain;\n\t\tvar invoice_item;\n\t\tinvoice.currency = quote.currency;\n\t\tinvoice.selling_price_list = quote.selling_price_list;\n\t\tif (!frm.doc.delivery_note) {\n\t\t\tinvoice.base_rounded_total = quote.base_rounded_total\n\t\t}\n\t\tquote.items.forEach(function (item) {\n\t\t\tfrappe.run_serially([\n\t\t\t\t() => console.log(item.item_code),\n\t\t\t\t() => frappe.call({\n\t\t\t\t\tmethod: \"eskill_custom.api.check_maintain_stock\",\n\t\t\t\t\targs: {\n\t\t\t\t\t\tdoctype: \"Issue\",\n\t\t\t\t\t\titem: item.item_code,\n\t\t\t\t\t},\n\t\t\t\t\tcallback: function (data) {\n\t\t\t\t\t\tmaintain = data.message[0][0];\n\t\t\t\t\t}\n\t\t\t\t}),\n\t\t\t\t() => invoice_item = quote_to_invoice_item(maintain, item, invoice)\n\t\t\t]);\n\t\t});\n\t})\n}\n\nfunction quote_to_invoice_item(maintain, item, invoice) {\n\tif (!maintain) {\n\t\tvar invoice_item = frappe.model.add_child(invoice, \"Sales Invoice Item\", \"items\");\n\t\tinvoice_item.item_code = item.item_code;\n\t\tinvoice_item.item_name = item.item_name;\n\t\tinvoice_item.description = item.description;\n\t\tinvoice_item.qty = item.qty;\n\t\tinvoice_item.uom = item.uom;\n\t\tinvoice_item.rate = item.rate;\n\t\tinvoice_item.stock_uom = item.stock_uom;\n\t\tinvoice_item.conversion_factor = item.conversion_factor;\n\t\tinvoice_item.stock_qty = item.stock_qty;\n\t\treturn invoice_item;\n\t} else {\n\t\treturn undefined\n\t}\n}\n\nfunction note_to_invoice(frm, invoice) {\n\tif (frm.doc.delivery_note) {\n\t\tfrappe.model.with_doc(\"Delivery Note\", frm.doc.delivery_note, function () {\n\t\t\tconst note = frappe.model.get_doc(\"Delivery Note\", frm.doc.delivery_note);\n\t\t\tvar invoice_item;\n\t\t\tnote.items.forEach(function (item) {\n\t\t\t\tinvoice_item = delivery_to_invoice_item(item, invoice);\n\t\t\t});\n\t\t});\n\t}\n}\n\nfunction delivery_to_invoice_item(item, invoice) {\n\tvar invoice_item = frappe.model.add_child(invoice, \"Sales Invoice Item\", \"items\");\n\tinvoice_item.item_code = item.item_code;\n\tinvoice_item.item_name = item.item_name;\n\tinvoice_item.description = item.description;\n\tinvoice_item.qty = item.qty;\n\tinvoice_item.uom = item.uom;\n\tinvoice_item.rate = item.rate;\n\tinvoice_item.stock_uom = item.stock_uom;\n\tinvoice_item.conversion_factor = item.conversion_factor;\n\tinvoice_item.stock_qty = item.stock_qty;\n\tinvoice_item.warehouse = item.warehouse;\n\tinvoice_item.delivery_note = item.parent;\n\tinvoice_item.dn_detail = item.name;\n\treturn invoice_item;\n}\n"
 },
 {
  "docstatus": 0,
  "doctype": "Custom Script",
  "dt": "Sales Order",
  "modified": "2020-10-22 13:54:49.178712",
  "name": "Sales Order-Client",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "script": "frappe.ui.form.on('Sales Order', {\n\tbefore_submit(frm) {\n    \tvar tempCust = frm.doc.customer;\n\t\tfrm.set_value(\"customer\", \"\");\n\t\tfrm.set_value(\"customer\", tempCust);\n\n        var emp = '';\n        frappe.run_serially([\n            () => frappe.call({\n                method: \"frappe.client.get_value\",\n                args: {\n                    \"doctype\": \"Employee\",\n                    \"filters\": {\n                        'user_id': frappe.session.user // where Clause \n                    },\n                    \"fieldname\": ['name'], // fieldname to be fetched\n                    \"limit\": 1\n                },\n                callback: function (data) {\n                    emp = data.message.name;\n                    if (!data.exc) {\n                       console.log(data.message);\n                    }\n                }\n            }),\n            () => frappe.call({\n                method: \"frappe.client.get_value\",\n                args: {\n                    \"doctype\": \"Sales Person\",\n                    \"filters\": {\n                        'employee': emp // where Clause \n                    },\n                    \"fieldname\": ['name'], // fieldname to be fetched\n                    \"limit\": 1\n                },\n                callback: function (data) {\n                    frm.set_value('sales_person', data.message.name);\n                    frm.refresh_field('sales_person');\n                    if (!data.exc) {\n                       console.log(r.message);\n                    }\n                }\n            }),\n            () => frm.clear_table('sales_team'),\n            () => frm.add_child('sales_team', {'sales_person': frm.doc.sales_person, 'allocated_percentage': 100}),\n            () => frm.refresh_field('sales_team')\n        ]);\n\t}\n});"
 },
 {
  "docstatus": 0,
  "doctype": "Custom Script",
  "dt": "Sales Invoice",
  "modified": "2020-10-22 13:38:43.924120",
  "name": "Sales Invoice-Client",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "script": "frappe.ui.form.on('Sales Invoice', {\n\tbefore_submit(frm) {\n\t    var emp, sales_team;\n\t    frappe.run_serially([\n            () => frappe.call({\n                method: \"frappe.client.get_value\",\n                args: {\n                    \"doctype\": \"Employee\",\n                    \"filters\": {\n                        'user_id': frappe.session.user // where Clause \n                    },\n                    \"fieldname\": ['name'], // fieldname to be fetched\n                    \"limit\": 1\n                },\n                callback: function (data) {\n                    emp = data.message.name;\n                    if (!data.exc) {\n                       console.log(r.message);\n                    }\n                }\n            }),\n            () => frappe.call({\n                method: \"frappe.client.get_value\",\n                args: {\n                    \"doctype\": \"Sales Person\",\n                    \"filters\": {\n                        'employee': emp // where Clause \n                    },\n                    \"fieldname\": ['name'], // fieldname to be fetched\n                    \"limit\": 1\n                },\n                callback: function (data) {\n                    frm.set_value('sales_person', data.message.name);\n                    frm.refresh_field('sales_person');\n                    if (!data.exc) {\n                       console.log(r.message);\n                    }\n                }\n            }),\n            () => frm.clear_table('sales_team'),\n            () => frm.add_child('sales_team', {'sales_person': frm.doc.sales_person, 'allocated_percentage': 100}),\n            () => frm.refresh_field('sales_team')\n        ]);\n\t}\n});"
 },
 {
  "docstatus": 0,
  "doctype": "Custom Script",
  "dt": "Task",
  "modified": "2020-11-10 12:13:28.644749",
  "name": "Task-Client",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "script": "frappe.ui.form.on('Task', {\n\trefresh(frm) {\n\t    if (frm.doc.status == 'Completed') {\n            frm.add_custom_button(\"Reopen\", function() {\n                frm.set_value(\"status\", \"Open\");\n                frm.set_value(\"progress\", 95);\n                frm.save();\n            });\n\t    } else if (frm.doc.status == 'Cancelled'){\n            frm.add_custom_button(\"Reopen\", function() {\n                frm.set_value(\"status\", \"Open\");\n                frm.save();\n            });\n\t    } else if (frm.doc.status == \"Open\") {\n            frm.add_custom_button(\"Working\", function() {\n                frm.set_value(\"status\", \"Working\");\n                frm.save();\n            }, \"Set Status\");\n            frm.add_custom_button(\"Pending Review\", function() {\n                frm.set_value(\"status\", \"Pending Review\");\n                frm.save();\n            }, \"Set Status\");\n            frm.add_custom_button(\"Cancel\", function() {\n                frm.set_value(\"status\", \"Cancelled\");\n                frm.save();\n            }, \"Set Status\");\n            frm.add_custom_button(\"Complete\", function() {\n                frm.set_value(\"status\", \"Completed\");\n                frm.save();\n            }, \"Set Status\");\n\t    } else if (frm.doc.status == \"Working\") {\n            frm.add_custom_button(\"Open\", function() {\n                frm.set_value(\"status\", \"Open\");\n                frm.save();\n            }, \"Set Status\");\n            frm.add_custom_button(\"Pending Review\", function() {\n                frm.set_value(\"status\", \"Pending Review\");\n                frm.save();\n            }, \"Set Status\");\n            frm.add_custom_button(\"Cancel\", function() {\n                frm.set_value(\"status\", \"Cancelled\");\n                frm.save();\n            }, \"Set Status\");\n            frm.add_custom_button(\"Complete\", function() {\n                frm.set_value(\"status\", \"Completed\");\n                frm.save();\n            }, \"Set Status\");\n\t    } else if (frm.doc.status == \"Pending Review\") {\n            frm.add_custom_button(\"Open\", function() {\n                frm.set_value(\"status\", \"Open\");\n                frm.save();\n            }, \"Set Status\");\n            frm.add_custom_button(\"Working\", function() {\n                frm.set_value(\"status\", \"Working\");\n                frm.save();\n            }, \"Set Status\");\n            frm.add_custom_button(\"Cancel\", function() {\n                frm.set_value(\"status\", \"Cancelled\");\n                frm.save();\n            }, \"Set Status\");\n            frm.add_custom_button(\"Complete\", function() {\n                frm.set_value(\"status\", \"Completed\");\n                frm.save();\n            }, \"Set Status\");\n\t    } else if (frm.doc.status == \"Overdue\") {\n            frm.add_custom_button(\"Cancel\", function() {\n                frm.set_value(\"status\", \"Cancelled\");\n                frm.save();\n            }, \"Set Status\");\n            frm.add_custom_button(\"Complete\", function() {\n                frm.set_value(\"status\", \"Completed\");\n                frm.save();\n            }, \"Set Status\");\n\t    }\n\t},\n\t\n\tstatus: function(frm) {\n\t    if (frm.doc.status != \"Completed\") {\n\t        frm.set_value(\"completed_by\", \"\");\n\t    } else {\n\t        frm.set_value(\"completed_by\", frappe.session.user);\n\t    }\n\t    if (frm.doc.status == \"Working\" && frm.doc.progress === 0) {\n\t        frm.set_value(\"progress\", 5);\n\t    }\n\t}\n});"
 },
 {
  "docstatus": 0,
  "doctype": "Custom Script",
  "dt": "Timesheet",
  "modified": "2020-09-14 15:10:38.035307",
  "name": "Timesheet-Client",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "script": "frappe.ui.form.on('Timesheet', {\n\trefresh(frm) {\n\t\tfrm.add_custom_button(__(\"Issues\"), function() {\n\t\t    frm.save();\n            frappe.route_options = {\n                \"name\": '',\n                \"subject\": '',\n                \"customer\": '',\n                \"serial_number\": '',\n                \"project\": '',\n                \"status\": '',\n                \"priority\": '',\n                \"technician_name\": ''\n            };\n            frappe.set_route(\"List\", \"Issue\");\n\t    });\n\t\tfrm.add_custom_button(__(\"Tasks\"), function() {\n\t\t    frm.save();\n            frappe.route_options = {\n                \"name\": '',\n                \"subject\": '',\n                \"project\": '',\n                \"status\": '',\n                \"priority\": ''\n            };\n            frappe.set_route(\"List\", \"Task\");\n\t    });\n\t}\n});"
 },
 {
  "docstatus": 0,
  "doctype": "Custom Script",
  "dt": "Quotation",
  "modified": "2021-01-05 14:26:28.016856",
  "name": "Quotation-Client",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "script": "frappe.ui.form.on('Quotation', {\n\tbefore_submit(frm) {\n\t    var emp;\n\t    frappe.run_serially([\n            () => frappe.call({\n                method: \"frappe.client.get_value\",\n                args: {\n                    \"doctype\": \"Employee\",\n                    \"filters\": {\n                        'user_id': frappe.session.user // where Clause \n                    },\n                    \"fieldname\": ['name'], // fieldname to be fetched\n                    \"limit\": 1\n                },\n                callback: function (data) {\n                    emp = data.message.name;\n                    if (!data.exc) {\n                       console.log(r.message);\n                    }\n                }\n            }),\n            () => frappe.call({\n                method: \"frappe.client.get_value\",\n                args: {\n                    \"doctype\": \"Sales Person\",\n                    \"filters\": {\n                        'employee': emp // where Clause \n                    },\n                    \"fieldname\": ['name'], // fieldname to be fetched\n                    \"limit\": 1\n                },\n                callback: function (data) {\n                    frm.set_value('sales_person', data.message.name);\n                    frm.refresh_field('sales_person');\n                    if (!data.exc) {\n                       console.log(r.message);\n                    }\n                }\n            }),\n        ]);\n\t},\n\t\n\tafter_submit(frm) {\n\t    if (frm.doc.issue) {\n\t        create_service_order(frm);\n\t    }\n\t}\n});\n\nfunction create_service_order(frm) {\n    var order = frappe.model.get_new_doc(\"Sales Order\")\n}"
 },
 {
  "docstatus": 0,
  "doctype": "Custom Script",
  "dt": "Warranty Swap Out",
  "modified": "2020-11-30 11:25:31.921254",
  "name": "Warranty Swap Out-Client",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "script": "frappe.ui.form.on('Warranty Swap Out', {\n\trefresh(frm) {\n\t    if (!frm.doc.docstatus && frm.doc.serial_no_out && !frm.doc.new_delivery_note) {\n    \t\tfrm.add_custom_button(__(\"Delivery Note\"), function() {\n        \t    const delivery = frappe.model.get_new_doc(\"Delivery Note\");\n    \t        console.log(\"Delivery Note started.\");\n    \t        delivery.naming_series = \"DN.########\";\n    \t        delivery.posting_date = frappe.datetime.nowdate();\n                delivery.company = \"Eskill Trading (Pvt) Ltd\";\n                delivery.customer = frm.doc.customer;\n    \t        var replacement = frappe.model.add_child(delivery, \"Delivery Note Item\", \"items\");\n    \t        frappe.model.with_doc(\"Item\", frm.doc.model_out, function() {\n    \t            var item = frappe.model.get_doc(\"Item\", frm.doc.model_out);\n        \t        replacement.item_code = item.name;\n        \t        replacement.item_name = item.item_name;\n        \t        replacement.description = item.description;\n        \t        replacement.qty = 1;\n        \t        replacement.schedule_date = delivery.schedule_date;\n        \t        replacement.uom = item.stock_uom;\n        \t        replacement.stock_uom = item.stock_uom;\n        \t        replacement.conversion_factor = 1;\n        \t        replacement.serial_no = frm.doc.serial_no_out;\n        \t        replacement.expense_account = \"20400 - Warranty Claims - ET\";\n    \t        });\n    \t        frappe.db.insert(delivery).then( function(note) {\n    \t            frm.doc.new_delivery_note = note.name;\n        \t        frm.save();\n    \t        });\n    \t        console.log(\"Delivery Note created.\");\n    \t\t});\n\t    }\n\t    frm.fields_dict.issue.get_query = function() {\n\t        return {\n\t            filters: [\n\t                ['Issue', \"serial_number\", \"is\", \"set\"]\n                ]\n\t        };\n\t    };\n\t\tfrm.fields_dict.customer.get_query = function() {\n\t\t\treturn{\n\t\t\t\tfilters: [\n\t\t\t\t    ['Customer', 'disabled', '=', false]\n\t\t\t\t]\n\t\t\t};\n\t\t};\n\t\tif (frm.doc.new_delivery_note) {\n\t\t    \n\t\t}\n\t\tclaim_filter(frm);\n\t\tmodel_out_filter(frm);\n\t\tserial_out_filter(frm);\n\t\tproduct_out_read_only(frm);\n\t},\n\t\n\tbefore_submit(frm) {\n\t    if (!frm.doc.new_delivery_note) {\n\t        validated = false;\n\t        frappe.throw(\"Delivery note for outgoing product is required!\");\n\t    }\n\t    if (!frm.doc.serial_no_out) {\n\t        validated = false;\n\t        frappe.throw(\"Serial number for outgoing product is required!\");\n\t    }\n\t},\n\t\n\tcustomer: function(frm) {\n\t    claim_filter(frm);\n\t},\n\t\n\tmodel_in: function(frm) {\n\t    model_out_filter(frm);\n\t},\n\t\n\tmodel_out: function(frm) {\n\t    serial_out_filter(frm);\n\t}\n});\n\nfunction claim_filter(frm) {\n    if (frm.doc.customer) {\n\t\tfrm.fields_dict.warranty_claim.get_query = function() {\n\t\t\treturn{\n\t\t\t\tfilters: [\n\t\t\t\t\t['Warranty Claim', 'customer', '=', frm.doc.customer],\n\t\t\t\t\t['Warranty Claim', 'status', '!=', 'Cancelled']\n\t\t\t\t]\n\t\t\t};\n\t\t};\n    } else {\n\t\tfrm.fields_dict.warranty_claim.get_query = function() {\n\t\t\treturn {\n\t\t\t\tfilters: [\n\t\t\t\t\t['Warranty Claim', 'status', '!=', 'Cancelled']\n\t\t\t\t]\n\t\t\t};\n\t\t};\n    }\n}\n\nfunction model_out_filter(frm) {\n    if (frm.doc.model_in) {\n        frappe.model.with_doc('Item', frm.doc.model_in, function() {\n            frm.fields_dict.model_out.get_query = function() {\n                return {\n                    filters: [\n                        ['Item', 'item_group', '=', frappe.model.get_doc('Item', frm.doc.model_in).item_group],\n                        ['Item', 'disabled', '=', false]\n                    ]\n                };\n            };\n        });\n    } else {\n        frm.fields_dict.model_out.get_query = function() {\n            return {\n                filters: [\n                    ['Item', 'disabled', '=', false]\n                ]\n            };\n        };\n    }\n}\n\nfunction serial_out_filter(frm) {\n    if (!frm.doc.model_out) {\n        if (frm.doc.serial_no_out) {\n            frm.doc.serial_no_out = undefined;\n        }\n    } else {\n        frm.fields_dict.serial_no_out.get_query = function() {\n            return {\n                filters: [\n                    ['Serial No', 'item_code', '=', frm.doc.model_out],\n                    ['Serial No', 'status', '=', 'Active']\n                ]\n            };\n        };\n    }\n}\n\nfunction product_out_read_only(frm) {\n    if (frm.doc.new_delivery_note) {\n        frm.set_df_property(\"model_out\", \"read_only\", 1);\n        frm.set_df_property(\"serial_no_out\", \"read_only\", 1);\n    }\n}"
 }
]